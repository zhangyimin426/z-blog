<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.zym.blog.dao.MenuMapper">
  <resultMap id="BaseResultMap" type="com.zym.blog.model.Menu">
    <id column="meun_id" property="meunId" jdbcType="INTEGER"/>
    <result column="meun_name" property="meunName" jdbcType="VARCHAR"/>
    <result column="meun_url" property="meunUrl" jdbcType="VARCHAR"/>
    <result column="parent_menu_id" property="parentMenuId" jdbcType="INTEGER"/>
  </resultMap>
  <sql id="Base_Column_List">
    meun_id, meun_name, meun_url, parent_menu_id
  </sql>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")"
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zym.blog.model.example.MenuExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from t_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.zym.blog.model.example.MenuExample">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from t_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="com.zym.blog.model.example.MenuExample">
    delete from t_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>

  <select id="countByExample" parameterType="com.zym.blog.model.example.MenuExample" resultType="java.lang.Integer">
    select count(*) from t_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update t_menu
    <set>
      <if test="record.meunId != null">
        meun_id = #{record.meunId,jdbcType=INTEGER},
      </if>
      <if test="record.meunName != null">
        meun_name = #{record.meunName,jdbcType=VARCHAR},
      </if>
      <if test="record.meunUrl != null">
        meun_url = #{record.meunUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.parentMenuId != null">
        parent_menu_id = #{record.parentMenuId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update t_menu
    set meun_id = #{record.meunId,jdbcType=INTEGER},
    meun_name = #{record.meunName,jdbcType=VARCHAR},
    meun_url = #{record.meunUrl,jdbcType=VARCHAR},
    parent_menu_id = #{record.parentMenuId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from t_menu
    where meun_id = #{meunId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_menu
    where meun_id = #{meunId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zym.blog.model.Menu" useGeneratedKeys="true" keyProperty="meunId">
    insert into t_menu (meun_name, meun_url, parent_menu_id
    )
    values (#{meunName,jdbcType=VARCHAR}, #{meunUrl,jdbcType=VARCHAR}, #{parentMenuId,jdbcType=INTEGER}
    )
  </insert>

  <insert id="insertSelective" parameterType="com.zym.blog.model.Menu">
    insert into t_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      meun_name,
      meun_url,
      parent_menu_id,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{meunName,jdbcType=VARCHAR},
      #{meunUrl,jdbcType=VARCHAR},
      #{parentMenuId,jdbcType=INTEGER},
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.zym.blog.model.Menu">
    update t_menu
    <set>
      <if test="meunName != null">
        meun_name = #{meunName,jdbcType=VARCHAR},
      </if>
      <if test="meunUrl != null">
        meun_url = #{meunUrl,jdbcType=VARCHAR},
      </if>
      <if test="parentMenuId != null">
        parent_menu_id = #{parentMenuId,jdbcType=INTEGER},
      </if>
    </set>
    where meun_id = #{meunId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.zym.blog.model.Menu">
    update t_menu
    set meun_name = #{meunName,jdbcType=VARCHAR},
    meun_url = #{meunUrl,jdbcType=VARCHAR},
    parent_menu_id = #{parentMenuId,jdbcType=INTEGER}
    where meun_id = #{meunId,jdbcType=INTEGER}
  </update>
</mapper>